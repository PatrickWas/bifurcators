Web VPython 3.2

def logistic(r, X):
    return r*X*(1-X)

seed = 0.5

str = input(prompt="How many iterations > 500 would you like to run? (ints only duh)")
if '.' in str:
    while True:
        input(prompt="HOW DARE YOU INPUT A FLOAT. REFRESH THE PAGE OR ELSE FACE THE INFINITE LOOP")
N = int(str)
if (N <= 500):
    while True:
        input(prompt="HOW DARE YOU INPUT AN NUMBER BELOW 501. REFRESH THE PAGE OR ELSE FACE THE INFINITE LOOP")


g = graph(title="Rabbits", xtitle="r", ytitle="Final population fraction(s)", ymin=0, ymax=1, xmin=0, xmax=4)
g2 = graph(title="Rabbits", xtitle="r", ytitle="Final population fraction(s)", xmin=2.9, xmax=3.6, ymin=0, ymax=1)
g3 = graph(title="Rabbits", xtitle="r", ytitle="Final population fraction(s)", xmin=3.5, xmax=3.58, ymin=0.25, ymax=0.95)
gd = gdots(graph=g, radius=1)
gd2 = gdots(graph=g2, radius=2)
gd3 = gdots(graph=g3, radius=2)

truths = [False] * 10
truths[0] = True

sum = 1

#bifs = []

i = 0
while i < 4:
    X = []
    X.append(seed)
    for j in range(1, N+1):
        frac = logistic(i, X[j-1])
        X.append(frac)
        if j > N-sum:
            for k in range(0, len(truths) - 1):
                if truths[k] and ! truths[k+1]:
                    if (int) (frac*2000) != (int) (X[j-2**k]*2000):
                        truths[k+1] = True
                        sum*=2
                        k = len(truths)
            gd.plot(i, frac)
            if (i >= 2.9 and i <= 3.6):
                gd2.plot(i, frac)
                if (i >= 3.5 and i <= 3.58):
                    gd3.plot(i, frac)
                
    if i >= 2.9 and i <= 3.6:
        i-=0.005
        if i >= 3.49 and i <= 3.58:
            i-=0.0045
    i += 0.01

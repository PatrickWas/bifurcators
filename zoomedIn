Web VPython 3.2

def logistic(r, X):
    return r*X*(1-X)

seed = 0.5

str = input(prompt="How many iterations > 500 would you like to run? (ints only duh)")
if '.' in str:
    while True:
        input(prompt="HOW DARE YOU INPUT A FLOAT. REFRESH THE PAGE OR ELSE FACE THE INFINITE LOOP")
N = int(str)
if (N <= 500):
    while True:
        input(prompt="HOW DARE YOU INPUT AN NUMBER BELOW 501. REFRESH THE PAGE OR ELSE FACE THE INFINITE LOOP")


truths = [False] * 10
truths[0] = True
truths[1] = True
truths[2] = True
truths[3] = True

bifs = [3, 3.4495, 3.5441]

for i in range(3.56, 3.57, 0.000001):
    X = []
    X.append(seed)
    for j in range(1, N+1):
        frac = logistic(i, X[j-1])
        X.append(frac)
        if j > N-1:
            for k in range(0, len(truths) - 1):
                if truths[k] and ! truths[k+1]:
                    if (int) (frac*N) != (int) (X[j-2**k]*N):
                        truths[k+1] = True
                        bifs.append(i)
print(bifs)
for i in range(2, len(bifs)):
    denom = bifs[i] - bifs[i-1]
    if denom != 0:
        print((bifs[i-1] - bifs[i-2]) / denom)
